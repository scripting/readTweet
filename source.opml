<?xml version="1.0" encoding="ISO-8859-1"?>
<!-- OPML generated by OPML Editor v10.1b19 on Mon, 13 Feb 2023 22:37:14 GMT -->

<!-- 
   Hi this is Dave Winer. I write all my project code in an outliner, which 
   generates all the files that make up this GitHub project. You'll see a 
   source.opml file like this in each of my projects. It contains the outline 
   source that the repo files were generated from. This is the most logical place 
   to store them. You can read the code in any outliner that supports OPML, which 
   includes http://drummer.scripting.com. You can use the Open URL command in 
   Drummer's File menu to open the "raw" version of this file straight from the 
   GitHub repo.
 -->

<opml version="2.0">
	<head>
		<title>nodeEditor: readTweet</title>
		<dateCreated>Mon, 13 Feb 2023 21:56:37 GMT</dateCreated>
		<dateModified>Mon, 13 Feb 2023 22:37:14 GMT</dateModified>
		<ownerName>Dave Winer</ownerName>
		<ownerId>http://davewiner.com/</ownerId>
		<expansionState>1, 2, 3, 14, 27</expansionState>
		<vertScrollState>1</vertScrollState>
		<windowTop>102</windowTop>
		<windowLeft>315</windowLeft>
		<windowBottom>817</windowBottom>
		<windowRight>1292</windowRight>
		</head>
	<body>
		<outline text="/scripting.com/code/readtweet/" created="Thu, 02 Dec 2021 14:19:56 GMT">
			<outline text="package.json">
				<outline text="{">
					<outline text="&quot;name&quot;: &quot;readtweet&quot;,"/>
					<outline text="&quot;description&quot;: &quot;Gather email addresses for Drummer users.&quot;" created="Mon, 13 Feb 2023 22:34:54 GMT"/>
					<outline text="&quot;version&quot;: &quot;0.4.0&quot;,"/>
					<outline text="&quot;author&quot;: &quot;Dave Winer &lt;dave@scripting.com&gt;&quot;,"/>
					<outline text="&quot;main&quot;: &quot;readtweet.js&quot;,"/>
					<outline text="&quot;dependencies&quot; : {">
						<outline text="&quot;daveutils&quot;: &quot;*&quot;,"/>
						<outline text="&quot;daveappserver&quot;: &quot;*&quot;"/>
						<outline text="} "/>
						</outline>
					<outline text="}"/>
					</outline>
				</outline>
			<outline text="readtweet.js" created="Thu, 17 Feb 2022 14:26:38 GMT">
				<outline text="const myVersion = &quot;0.4.0&quot;, myProductName = &quot;readtweet&quot;; " created="Mon, 03 Feb 2014 03:21:03 GMT" pgfnum="36831"/>
				<outline text="" created="Wed, 24 Nov 2021 15:06:21 GMT"/>
				<outline text="const fs = require (&quot;fs&quot;);" created="Sat, 20 Feb 2021 22:03:12 GMT"/>
				<outline text="const utils = require (&quot;daveutils&quot;);" created="Sat, 20 Feb 2021 22:03:12 GMT"/>
				<outline text="const davetwitter = require (&quot;davetwitter&quot;); "/>
				<outline text="const daveappserver = require (&quot;daveappserver&quot;); "/>
				<outline text="" created="Mon, 13 Feb 2023 18:33:03 GMT"/>
				<outline text="var users = new Object ();" created="Mon, 13 Feb 2023 18:33:04 GMT"/>
				<outline text="var flUsersChanged = true;" created="Mon, 13 Feb 2023 18:33:14 GMT"/>
				<outline text="" created="Mon, 21 Nov 2022 20:15:42 GMT"/>
				<outline text="function getEmailAddressFromTweet (urltweet, callback) {" created="Mon, 13 Feb 2023 17:40:46 GMT">
					<outline text="" created="Mon, 13 Feb 2023 17:41:26 GMT"/>
					<outline text="https://twitter.com/pablocubist/status/1625188266197630983" isComment="true" created="Mon, 13 Feb 2023 17:41:26 GMT"/>
					<outline text="" created="Mon, 13 Feb 2023 17:41:26 GMT"/>
					<outline text="const id = utils.stringLastField (urltweet, &quot;/&quot;);" created="Mon, 13 Feb 2023 17:41:27 GMT"/>
					<outline text="const screenname = utils.stringNthField (urltweet, &quot;/&quot;, 4);" created="Mon, 13 Feb 2023 18:31:29 GMT"/>
					<outline text="davetwitter.getTweet (config.token, config.secret, id, function (err, theTweet) {" created="Mon, 13 Feb 2023 04:41:26 GMT">
						<outline text="if (err) {" created="Mon, 13 Feb 2023 17:43:44 GMT">
							<outline text="callback (err);" created="Mon, 13 Feb 2023 17:43:48 GMT"/>
							<outline text="}" created="Mon, 13 Feb 2023 17:43:51 GMT"/>
							</outline>
						<outline text="else {" created="Mon, 13 Feb 2023 17:43:52 GMT">
							<outline text="var theText = theTweet.full_text;" created="Mon, 13 Feb 2023 18:03:28 GMT"/>
							<outline text="" created="Mon, 13 Feb 2023 18:32:19 GMT"/>
							<outline text="users [screenname] = theTweet.full_text;" created="Mon, 13 Feb 2023 18:32:19 GMT"/>
							<outline text="flUsersChanged = true;" created="Mon, 13 Feb 2023 18:32:46 GMT"/>
							<outline text="" created="Mon, 13 Feb 2023 18:32:20 GMT"/>
							<outline text="callback (undefined, {theText});" created="Mon, 13 Feb 2023 17:48:40 GMT"/>
							<outline text="}" created="Mon, 13 Feb 2023 17:43:55 GMT"/>
							</outline>
						<outline text="});" created="Mon, 13 Feb 2023 17:43:40 GMT"/>
						</outline>
					<outline text="}" created="Mon, 13 Feb 2023 17:40:59 GMT"/>
					</outline>
				<outline text="" created="Mon, 13 Feb 2023 17:40:10 GMT"/>
				<outline text="function handleHttpRequest (theRequest) {" created="Sat, 06 Nov 2021 20:25:05 GMT">
					<outline text="var now = new Date ();"/>
					<outline text="const params = theRequest.params;"/>
					<outline text="const token = params.oauth_token;"/>
					<outline text="const secret = params.oauth_token_secret;"/>
					<outline text="function returnRedirect (url, code) { ">
						<outline text="var headers = {">
							<outline text="location: url"/>
							<outline text="};"/>
							</outline>
						<outline text="if (code === undefined) {">
							<outline text="code = 302;"/>
							<outline text="}"/>
							</outline>
						<outline text="theRequest.httpReturn (code, &quot;text/plain&quot;, code + &quot; REDIRECT&quot;, headers);"/>
						<outline text="}"/>
						<outline text=""/>
						</outline>
					<outline text="function returnPlainText (s) {">
						<outline text="theRequest.httpReturn (200, &quot;text/plain&quot;, s.toString ());"/>
						<outline text="}"/>
						</outline>
					<outline text="function returnData (jstruct) {">
						<outline text="if (jstruct === undefined) {">
							<outline text="jstruct = {};"/>
							<outline text="}"/>
							</outline>
						<outline text="theRequest.httpReturn (200, &quot;application/json&quot;, utils.jsonStringify (jstruct));"/>
						<outline text="}"/>
						</outline>
					<outline text="function returnJsontext (jsontext) { //9/14/22 by DW">
						<outline text="theRequest.httpReturn (200, &quot;application/json&quot;, jsontext.toString ());"/>
						<outline text="}"/>
						</outline>
					<outline text="function returnError (jstruct) {">
						<outline text="theRequest.httpReturn (500, &quot;application/json&quot;, utils.jsonStringify (jstruct));"/>
						<outline text="}"/>
						</outline>
					<outline text="function returnOpml (err, opmltext) {">
						<outline text="if (err) {">
							<outline text="returnError (err);"/>
							<outline text="}"/>
							</outline>
						<outline text="else {">
							<outline text="theRequest.httpReturn (200, &quot;text/xml&quot;, opmltext);"/>
							<outline text="}"/>
							</outline>
						<outline text="}"/>
						</outline>
					<outline text="function httpReturn (err, returnedValue) {">
						<outline text="Changed" isComment="true" created="Wed, 14 Sep 2022 19:47:30 GMT">
							<outline text="9/14/22; 3:47:35 PM by DW" created="Wed, 14 Sep 2022 19:47:34 GMT">
								<outline text="If the returned value is an object, call returnData, but if it's something else, return it as a string. " created="Wed, 14 Sep 2022 19:47:36 GMT"/>
								<outline text="In all cases, the returned type is application/json." created="Wed, 14 Sep 2022 19:48:09 GMT"/>
								<outline text="This allows the river routines to convert the object to jsontext so it can cache that instead of an object." created="Wed, 14 Sep 2022 19:48:38 GMT"/>
								</outline>
							</outline>
						<outline text="if (err) {">
							<outline text="returnError (err);"/>
							<outline text="}"/>
							</outline>
						<outline text="else {">
							<outline text="if (typeof returnedValue == &quot;object&quot;) {" created="Wed, 14 Sep 2022 19:49:36 GMT">
								<outline text="returnData (returnedValue);"/>
								<outline text="}" created="Wed, 14 Sep 2022 19:49:54 GMT"/>
								</outline>
							<outline text="else {" created="Wed, 14 Sep 2022 19:50:07 GMT">
								<outline text="returnJsontext (returnedValue); //9/14/22 by DW" created="Wed, 14 Sep 2022 19:52:50 GMT"/>
								<outline text="}" created="Wed, 14 Sep 2022 19:50:09 GMT"/>
								</outline>
							<outline text="}"/>
							</outline>
						<outline text="}"/>
						</outline>
					<outline text="function xmlReturn (err, xmltext) { //9/17/22 by DW" created="Sat, 17 Sep 2022 16:20:25 GMT">
						<outline text="if (err) {" created="Sat, 17 Sep 2022 16:20:42 GMT">
							<outline text="returnError (err);"/>
							<outline text="}" created="Sat, 17 Sep 2022 16:20:45 GMT"/>
							</outline>
						<outline text="else {" created="Sat, 17 Sep 2022 16:20:45 GMT">
							<outline text="theRequest.httpReturn (200, &quot;text/xml&quot;, xmltext);"/>
							<outline text="}" created="Sat, 17 Sep 2022 16:20:47 GMT"/>
							</outline>
						<outline text="}" created="Sat, 17 Sep 2022 16:20:33 GMT"/>
						</outline>
					<outline text="function callWithScreenname (callback) {">
						<outline text="davetwitter.getScreenName (token, secret, function (screenname) {" created="Wed, 09 Jul 2014 23:57:16 GMT" pgfnum="42784">
							<outline text="if (screenname === undefined) {" created="Thu, 10 Jul 2014 00:53:00 GMT" pgfnum="42793">
								<outline text="returnError ({message: &quot;Can't do the thing you want because the accessToken is not valid.&quot;});    "/>
								<outline text="}" created="Thu, 10 Jul 2014 00:53:11 GMT" pgfnum="42797"/>
								</outline>
							<outline text="else {" created="Thu, 10 Jul 2014 00:53:12 GMT" pgfnum="42798">
								<outline text="callback (screenname);"/>
								<outline text="}" created="Thu, 10 Jul 2014 00:53:14 GMT" pgfnum="42799"/>
								</outline>
							<outline text="});" created="Wed, 09 Jul 2014 23:57:25 GMT" pgfnum="42785"/>
							</outline>
						<outline text="}"/>
						</outline>
					<outline text="switch (theRequest.method) {" created="Thu, 01 May 2014 20:42:04 GMT" pgfnum="40803">
						<outline text="case &quot;POST&quot;:" isComment="true" created="Thu, 01 May 2014 20:42:39 GMT" pgfnum="40807">
							<outline text="switch (theRequest.lowerpath) {">
								<outline text="case &quot;/opmlsubscribe&quot;: //6/30/22 by DW" created="Thu, 26 May 2022 17:09:29 GMT">
									<outline text="callWithScreenname (function (screenname) {">
										<outline text="subscribeToOpml (screenname, theRequest.postBody, utils.getBoolean (params.flDeleteEnabled), httpReturn);" created="Fri, 20 May 2022 13:59:30 GMT"/>
										<outline text="});"/>
										</outline>
									<outline text="return (true); " created="Wed, 22 Jan 2014 15:18:30 GMT" pgfnum="36266"/>
									</outline>
								<outline text="case config.rssCloud.feedUpdatedCallback: //10/9/22 by DW" created="Wed, 22 Jan 2014 15:18:23 GMT" pgfnum="36265">
									<outline text="var jstruct = qs.parse (theRequest.postBody);"/>
									<outline text="console.log (&quot;\n&quot; + config.rssCloud.feedUpdatedCallback + &quot;: jstruct == &quot; + utils.jsonStringify (jstruct) + &quot;\n&quot;);" created="Sun, 09 Oct 2022 15:37:41 GMT"/>
									<outline text="database.checkOneFeed (jstruct.url, function (err, data) {" created="Sun, 09 Oct 2022 15:13:06 GMT">
										<outline text="returnPlainText (&quot;Thanks for the update! ;-)&quot;);"/>
										<outline text="});" created="Sun, 09 Oct 2022 15:13:43 GMT"/>
										</outline>
									<outline text="return (true); " created="Wed, 22 Jan 2014 15:18:30 GMT" pgfnum="36266"/>
									</outline>
								<outline text="default: " created="Thu, 30 Jun 2022 15:30:25 GMT">
									<outline text="return (false); //not consumed" created="Thu, 30 Jun 2022 15:30:27 GMT"/>
									</outline>
								<outline text="}" created="Mon, 03 Feb 2014 03:20:25 GMT" pgfnum="36830"/>
								</outline>
							</outline>
						<outline text="case &quot;GET&quot;:" created="Thu, 01 May 2014 20:42:39 GMT" pgfnum="40807">
							<outline text="switch (theRequest.lowerpath) {">
								<outline text="case &quot;/now&quot;: " created="Thu, 03 Nov 2022 19:29:32 GMT">
									<outline text="returnPlainText (new Date ().toString ());" created="Fri, 04 Nov 2022 14:42:33 GMT"/>
									<outline text="return (true);"/>
									</outline>
								<outline text="case &quot;/getemailaddressfromtweet&quot;: " created="Thu, 03 Nov 2022 19:29:32 GMT">
									<outline text="getEmailAddressFromTweet (params.urltweet, httpReturn);" created="Mon, 13 Feb 2023 17:40:10 GMT"/>
									<outline text="return (true);"/>
									</outline>
								<outline text="default: " created="Thu, 30 Jun 2022 15:30:25 GMT">
									<outline text="return (false); //not consumed" created="Thu, 30 Jun 2022 15:30:27 GMT"/>
									</outline>
								<outline text="}" created="Mon, 03 Feb 2014 03:20:25 GMT" pgfnum="36830"/>
								</outline>
							<outline text="break;" created="Thu, 01 May 2014 20:42:44 GMT" pgfnum="40808"/>
							</outline>
						<outline text="}" created="Thu, 01 May 2014 20:42:10 GMT" pgfnum="40804"/>
						</outline>
					<outline text="return (false); //not consumed"/>
					<outline text="}" created="Sat, 06 Nov 2021 20:25:18 GMT"/>
					</outline>
				<outline text="" created="Mon, 13 Feb 2023 04:40:41 GMT"/>
				<outline text="var config = {" created="Mon, 29 Nov 2021 15:52:16 GMT">
					<outline text="};" created="Mon, 29 Nov 2021 15:52:19 GMT"/>
					</outline>
				<outline text="" created="Mon, 13 Feb 2023 18:34:32 GMT"/>
				<outline text="function everySecond () {" created="Mon, 13 Feb 2023 18:34:32 GMT">
					<outline text="if (flUsersChanged) {" created="Mon, 13 Feb 2023 18:34:49 GMT">
						<outline text="flUsersChanged = false;" created="Mon, 13 Feb 2023 18:35:53 GMT"/>
						<outline text="fs.writeFile (&quot;users.json&quot;, utils.jsonStringify (users), function (err) {" created="Mon, 13 Feb 2023 18:34:52 GMT">
							<outline text="});" created="Mon, 13 Feb 2023 18:35:46 GMT"/>
							</outline>
						<outline text="}" created="Mon, 13 Feb 2023 18:35:31 GMT"/>
						</outline>
					<outline text="}" created="Mon, 13 Feb 2023 18:34:36 GMT"/>
					</outline>
				<outline text="" created="Mon, 13 Feb 2023 04:28:12 GMT"/>
				<outline text="var options = {" created="Mon, 13 Feb 2023 04:28:13 GMT">
					<outline text="everySecond," created="Mon, 13 Feb 2023 18:34:24 GMT"/>
					<outline text="httpRequest: handleHttpRequest" created="Mon, 13 Feb 2023 04:40:44 GMT"/>
					<outline text="};" created="Mon, 13 Feb 2023 04:28:16 GMT"/>
					</outline>
				<outline text="" created="Mon, 13 Feb 2023 04:22:39 GMT"/>
				<outline text="fs.readFile (&quot;users.json&quot;, function (err, jsontext) {" created="Mon, 13 Feb 2023 18:36:01 GMT">
					<outline text="if (!err) {" created="Mon, 13 Feb 2023 18:36:23 GMT">
						<outline text="users = JSON.parse (jsontext);" created="Mon, 13 Feb 2023 18:36:30 GMT"/>
						<outline text="}" created="Mon, 13 Feb 2023 18:36:25 GMT"/>
						</outline>
					<outline text="daveappserver.start (options, function (appConfig) {">
						<outline text="for (var x in appConfig) {" created="Mon, 29 Nov 2021 15:51:41 GMT">
							<outline text="config [x] = appConfig [x];" created="Mon, 29 Nov 2021 15:51:48 GMT"/>
							<outline text="}" created="Mon, 29 Nov 2021 15:51:53 GMT"/>
							</outline>
						<outline text="});" created="Sat, 06 Nov 2021 17:09:03 GMT"/>
						</outline>
					<outline text="});" created="Mon, 13 Feb 2023 18:36:16 GMT"/>
					</outline>
				<outline text="" created="Thu, 17 Feb 2022 14:36:37 GMT"/>
				</outline>
			<outline text="" created="Mon, 13 Feb 2023 16:21:50 GMT"/>
			<outline text="styles.css" created="Wed, 24 Nov 2021 21:11:47 GMT">
				<outline text="body {">
					<outline text="font-family: Ubuntu;"/>
					<outline text="font-size: 20px;"/>
					<outline text="background-color: whitesmoke;"/>
					<outline text="}"/>
					</outline>
				<outline text=".divPageBody {">
					<outline text="width: 70%;"/>
					<outline text="margin-top: 90px;"/>
					<outline text="margin-left: auto;"/>
					<outline text="margin-right: auto;"/>
					<outline text="margin-bottom: 400px;"/>
					<outline text="}"/>
					</outline>
				<outline text=".divPageBody p {">
					<outline text="line-height: 140%;" created="Sat, 11 Feb 2023 15:20:56 GMT"/>
					<outline text="font-size: 17px;" created="Sat, 11 Feb 2023 15:24:34 GMT"/>
					<outline text="}" created="Sat, 11 Feb 2023 15:21:04 GMT"/>
					</outline>
				<outline text=".divPageBody ul li {" created="Mon, 13 Feb 2023 16:35:06 GMT">
					<outline text="line-height: 140%;" created="Sat, 11 Feb 2023 15:20:56 GMT"/>
					<outline text="font-size: 17px;" created="Sat, 11 Feb 2023 15:24:34 GMT"/>
					<outline text="margin-bottom: 5px;" created="Mon, 13 Feb 2023 18:46:28 GMT"/>
					<outline text="}" created="Mon, 13 Feb 2023 16:35:09 GMT"/>
					</outline>
				<outline text=".divPageBody ul  {">
					<outline text="margin-bottom: 25px;" created="Mon, 13 Feb 2023 16:37:22 GMT"/>
					<outline text="}" created="Mon, 13 Feb 2023 16:37:27 GMT"/>
					</outline>
				<outline text=".divVersionNumber {" isComment="true">
					<outline text="font-size: 12px;"/>
					<outline text="color: &lt;%uiTextColor%&gt;;" isComment="true"/>
					<outline text="float: right;"/>
					<outline text="padding: 19px;"/>
					<outline text="}"/>
					</outline>
				<outline text="" created="Wed, 24 Nov 2021 18:04:57 GMT"/>
				<outline text=".divVersionNumber {">
					<outline text="font-size: 12px;"/>
					<outline text="color: &lt;%uiTextColor%&gt;;" isComment="true"/>
					<outline text="float: right;"/>
					<outline text="padding: 19px;"/>
					<outline text="}"/>
					</outline>
				<outline text=".iMenuCheck {">
					<outline text="margin-left: -18px;"/>
					<outline text="color: darkgray;" isComment="true"/>
					<outline text="margin-right: 3px;"/>
					<outline text="}"/>
					</outline>
				<outline text="" created="Sat, 11 Feb 2023 15:13:48 GMT"/>
				<outline text=".divPageBody input {" created="Sat, 11 Feb 2023 15:13:48 GMT">
					<outline text="font-size: 17px;" created="Sat, 11 Feb 2023 15:14:03 GMT"/>
					<outline text="padding: 7px;" created="Sat, 11 Feb 2023 15:14:17 GMT"/>
					<outline text="height: auto; " created="Sat, 11 Feb 2023 15:14:23 GMT"/>
					<outline text="margin-top: 10px;" created="Sat, 11 Feb 2023 15:17:21 GMT"/>
					<outline text="width: 515px;" created="Sat, 11 Feb 2023 15:14:26 GMT"/>
					<outline text="}" created="Sat, 11 Feb 2023 15:13:55 GMT"/>
					</outline>
				<outline text="" created="Sat, 11 Feb 2023 15:13:48 GMT"/>
				<outline text="" created="Sat, 11 Feb 2023 15:13:49 GMT"/>
				</outline>
			<outline text="code.js" created="Wed, 24 Nov 2021 21:12:16 GMT">
				<outline text="const appConsts = {" created="Wed, 16 Feb 2022 15:55:38 GMT">
					<outline text="urlTwitterServer: &quot;//readtweet.scripting.com/&quot;" created="Mon, 13 Feb 2023 17:53:50 GMT"/>
					<outline text="urlTwitterServer: &quot;//localhost:1420/&quot;" isComment="true" created="Mon, 13 Feb 2023 17:53:50 GMT"/>
					<outline text="};" created="Mon, 13 Feb 2023 17:53:42 GMT"/>
					</outline>
				<outline text="" created="Wed, 16 Feb 2022 16:29:57 GMT"/>
				<outline text="function httpRequest (url, timeout, headers, callback) { ">
					<outline text="Changes" isComment="true">
						<outline text="7/22/22; 12:30:36 PM by DW" created="Fri, 22 Jul 2022 16:30:36 GMT">
							<outline text="If there's no message, say there was a communication error. We have to say something. ;-)" created="Fri, 22 Jul 2022 16:30:37 GMT"/>
							</outline>
						<outline text="9/18/21; 10:47:11 AM by DW" created="Sat, 18 Sep 2021 14:47:10 GMT">
							<outline text="When there's an error, usually there is a status.responseText to parse as JSON, but sometimes it fails. Now we account for that. " created="Sat, 18 Sep 2021 14:47:11 GMT"/>
							</outline>
						<outline text="7/20/20; 5:36:14 PM by DW">
							<outline text="Finally, I need a HTTP request routine that calls back in a standard way.">
								<outline text="function (err, data)"/>
								</outline>
							<outline text="No, I don't want to use promises."/>
							<outline text="for info about timeous see this page." isComment="true">
								<outline text="http://stackoverflow.com/questions/3543683/determine-if-ajax-error-is-a-timeout"/>
								</outline>
							</outline>
						</outline>
					<outline text="timeout = (timeout === undefined) ? 30000 : timeout;"/>
					<outline text="var jxhr = $.ajax ({ ">
						<outline text="url: url,"/>
						<outline text="dataType: &quot;text&quot;, "/>
						<outline text="headers," created="Tue, 14 May 2013 14:35:06 GMT" pgfnum="23850"/>
						<outline text="timeout"/>
						<outline text="}) "/>
						</outline>
					<outline text=".success (function (data, status) { ">
						<outline text="callback (undefined, data);"/>
						<outline text="}) "/>
						</outline>
					<outline text=".error (function (status) { ">
						<outline text="var message;" created="Sat, 18 Sep 2021 14:45:42 GMT"/>
						<outline text="try { //9/18/21 by DW" created="Sat, 18 Sep 2021 14:45:52 GMT">
							<outline text="message = JSON.parse (status.responseText).message;" created="Sat, 18 Sep 2021 14:46:09 GMT"/>
							<outline text="}" created="Sat, 18 Sep 2021 14:45:55 GMT"/>
							</outline>
						<outline text="catch (err) {" created="Sat, 18 Sep 2021 14:45:57 GMT">
							<outline text="message = status.responseText;" created="Sat, 18 Sep 2021 14:46:25 GMT"/>
							<outline text="}" created="Sat, 18 Sep 2021 14:46:00 GMT"/>
							</outline>
						<outline text="if ((message === undefined) || (message.length == 0)) { //7/22/22 by DW &amp; 8/31/22 by DW" created="Fri, 22 Jul 2022 16:29:46 GMT">
							<outline text="message = &quot;There was an error communicating with the server.&quot;;" created="Fri, 22 Jul 2022 16:30:07 GMT"/>
							<outline text="}" created="Fri, 22 Jul 2022 16:29:57 GMT"/>
							</outline>
						<outline text="var err = {">
							<outline text="code: status.status,"/>
							<outline text="message"/>
							<outline text="};"/>
							</outline>
						<outline text="callback (err);"/>
						<outline text="});"/>
						</outline>
					<outline text="}"/>
					</outline>
				<outline text="function buildParamList (paramtable, flPrivate) { //8/4/21 by DW" created="Sat, 09 Aug 2014 15:39:08 GMT" pgfnum="43181">
					<outline text="Changes" isComment="true" created="Wed, 04 Aug 2021 14:47:01 GMT">
						<outline text="8/4/21; 10:47:04 AM by DW" created="Wed, 04 Aug 2021 14:47:03 GMT">
							<outline text="Copied twBuildParamList. If an element of params is undefined, don't include it. We were encoding it as a string, &quot;undefined&quot; and all of a sudden on the other side, in davetwitter, it was calling it an error. It is pretty errorish, but why it started now, that's a mystery." created="Wed, 04 Aug 2021 14:47:04 GMT"/>
							</outline>
						</outline>
					<outline text="var s = &quot;&quot;;" created="Sat, 09 Aug 2014 15:39:47 GMT" pgfnum="43188"/>
					<outline text="if (flPrivate) {" created="Sat, 09 Aug 2014 20:17:16 GMT" pgfnum="43185">
						<outline text="paramtable.flprivate = &quot;true&quot;;" created="Sat, 09 Aug 2014 15:43:48 GMT" pgfnum="43208"/>
						<outline text="}" created="Sat, 09 Aug 2014 20:17:19 GMT" pgfnum="43186"/>
						</outline>
					<outline text="for (var x in paramtable) {" created="Sat, 09 Aug 2014 15:39:38 GMT" pgfnum="43186">
						<outline text="if (paramtable [x] !== undefined) { //8/4/21 by DW" created="Wed, 04 Aug 2021 14:48:52 GMT">
							<outline text="if (s.length &gt; 0) {" created="Sat, 09 Aug 2014 15:40:02 GMT" pgfnum="43189">
								<outline text="s += &quot;&amp;&quot;;" created="Sat, 09 Aug 2014 15:40:08 GMT" pgfnum="43190"/>
								<outline text="}" created="Sat, 09 Aug 2014 15:40:14 GMT" pgfnum="43191"/>
								</outline>
							<outline text="s += x + &quot;=&quot; + encodeURIComponent (paramtable [x]);" created="Sat, 09 Aug 2014 15:40:19 GMT" pgfnum="43192"/>
							<outline text="}" created="Wed, 04 Aug 2021 14:49:01 GMT"/>
							</outline>
						<outline text="}" created="Sat, 09 Aug 2014 15:39:43 GMT" pgfnum="43187"/>
						</outline>
					<outline text="return (s);" created="Sat, 09 Aug 2014 15:40:54 GMT" pgfnum="43193"/>
					<outline text="}" created="Sat, 09 Aug 2014 15:39:35 GMT" pgfnum="43185"/>
					</outline>
				<outline text="function servercall (path, params, flAuthenticated, callback, urlServer=appConsts.urlTwitterServer) {">
					<outline text="Changes" isComment="true">
						<outline text="12/23/22; 10:30:22 PM by DW" created="Sat, 24 Dec 2022 03:30:22 GMT">
							<outline text="Support email params. Don't send oauth token if it's not defined." created="Sat, 24 Dec 2022 03:30:22 GMT"/>
							</outline>
						<outline text="12/10/21; 12:51:58 PM by DW" created="Fri, 10 Dec 2021 17:51:57 GMT">
							<outline text="New optional parameter, urlServer, so this function can be used to call Daytona." created="Fri, 10 Dec 2021 17:51:58 GMT"/>
							</outline>
						<outline text="1/11/21; 12:51:47 PM by DW">
							<outline text="New param, flAuthenticated. If true we add the oAuth info to the call. "/>
							</outline>
						</outline>
					<outline text="var whenstart = new Date ();"/>
					<outline text="if (params === undefined) {">
						<outline text="params = new Object ();"/>
						<outline text="}"/>
						</outline>
					<outline text="if (flAuthenticated) { //1/11/21 by DW">
						<outline text="if (localStorage.twOauthToken !== undefined) { //12/23/22 by DW" created="Sat, 24 Dec 2022 03:29:45 GMT">
							<outline text="params.oauth_token = localStorage.twOauthToken;"/>
							<outline text="params.oauth_token_secret = localStorage.twOauthTokenSecret;"/>
							<outline text="}" created="Sat, 24 Dec 2022 03:29:55 GMT"/>
							</outline>
						<outline text="addEmailParams (params); //12/13/22 by DW" created="Tue, 13 Dec 2022 21:39:41 GMT"/>
						<outline text="}"/>
						</outline>
					<outline text="var url = urlServer + path + &quot;?&quot; + buildParamList (params, false);" created="Sat, 09 Aug 2014 16:02:57 GMT" pgfnum="43215"/>
					<outline text="console.log (&quot;servercall: url == &quot; + url);" isComment="true" created="Mon, 30 Jan 2023 17:35:43 GMT"/>
					<outline text="httpRequest (url, undefined, undefined, function (err, jsontext) {">
						<outline text="if (err) {">
							<outline text="console.log (&quot;servercall: url == &quot; + url + &quot;, err.message == &quot; + err.message);"/>
							<outline text="callback (err);"/>
							<outline text="}"/>
							</outline>
						<outline text="else {">
							<outline text="console.log (&quot;servercall: jsontext.length == &quot; + jsontext.length + &quot;, secs == &quot; + secondsSince (whenstart)); " isComment="true"/>
							<outline text="callback (undefined, JSON.parse (jsontext));"/>
							<outline text="}"/>
							</outline>
						<outline text="});"/>
						</outline>
					<outline text="}"/>
					</outline>
				<outline text="function getEmailAddressFromTweet (urltweet, callback) { //12/7/22 by DW" created="Thu, 03 Nov 2022 19:14:13 GMT">
					<outline text="servercall (&quot;getemailaddressfromtweet&quot;, {urltweet}, false, callback);"/>
					<outline text="}" created="Thu, 03 Nov 2022 19:14:36 GMT"/>
					</outline>
				<outline text="function clickGoButton () {" created="Sat, 11 Feb 2023 15:26:13 GMT">
					<outline text="console.log (&quot;clickGoButton&quot;);" created="Sat, 11 Feb 2023 15:26:17 GMT"/>
					<outline text="$(&quot;#idGoButton&quot;).blur ();" created="Sat, 11 Feb 2023 15:27:39 GMT"/>
					<outline text="var urlTweet = trimWhitespace ($(&quot;#idUrlTweet&quot;).val ());" created="Sat, 11 Feb 2023 15:28:06 GMT"/>
					<outline text="if (urlTweet.length == 0) {" created="Sat, 11 Feb 2023 15:29:23 GMT">
						<outline text="speakerBeep ();" created="Sat, 11 Feb 2023 15:29:31 GMT"/>
						<outline text="}" created="Sat, 11 Feb 2023 15:29:43 GMT"/>
						</outline>
					<outline text="else {" created="Sat, 11 Feb 2023 15:29:45 GMT">
						<outline text="console.log (&quot;clickGoButton: urlTweet == &quot; + urlTweet);" created="Sat, 11 Feb 2023 15:26:17 GMT"/>
						<outline text="getEmailAddressFromTweet (urlTweet, function (err, data) {" created="Mon, 13 Feb 2023 17:49:19 GMT">
							<outline text="if (err) {" created="Mon, 13 Feb 2023 17:49:38 GMT">
								<outline text="alertDialog (err.message);" created="Mon, 13 Feb 2023 17:49:41 GMT"/>
								<outline text="}" created="Mon, 13 Feb 2023 17:49:47 GMT"/>
								</outline>
							<outline text="else {" created="Mon, 13 Feb 2023 17:49:48 GMT">
								<outline text="alertDialog (&quot;According to &lt;a href=\&quot;&quot; + urlTweet + &quot;\&quot; target=\&quot;_blank\&quot;&gt;the tweet&lt;/a&gt;, your email address is: &lt;br&gt;&lt;br&gt;&lt;i&gt;&quot; + data.theText + &quot;.&lt;/i&gt;&lt;br&gt;&lt;br&gt;If this is correct, you can delete the tweet. If not, please try again.&quot;);" created="Mon, 13 Feb 2023 18:40:18 GMT"/>
								<outline text="}" created="Mon, 13 Feb 2023 17:49:59 GMT"/>
								</outline>
							<outline text="});" created="Mon, 13 Feb 2023 17:49:25 GMT"/>
							</outline>
						<outline text="}" created="Sat, 11 Feb 2023 15:29:49 GMT"/>
						</outline>
					<outline text="" created="Sat, 11 Feb 2023 15:29:07 GMT"/>
					<outline text="}" created="Sat, 11 Feb 2023 15:26:22 GMT"/>
					</outline>
				<outline text="function prefsChanged () {" isComment="true" created="Wed, 16 Feb 2022 16:29:35 GMT">
					<outline text="myNodeStorageApp.prefsChanged ();"/>
					<outline text="}" created="Wed, 16 Feb 2022 16:29:43 GMT"/>
					</outline>
				<outline text="function updateTwitterLogin () {" isComment="true">
					<outline text="if (appConsts.flEnableLogin) {">
						<outline text="initTwitterMenuItems ();"/>
						<outline text="}"/>
						</outline>
					<outline text="}"/>
					</outline>
				<outline text="function everySecond () {" isComment="true" created="Wed, 16 Feb 2022 16:42:33 GMT">
					<outline text="if (flBuildFeedsMenu) {" isComment="true" created="Thu, 17 Feb 2022 16:10:47 GMT">
						<outline text="flBuildFeedsMenu = false;" created="Thu, 17 Feb 2022 16:10:58 GMT"/>
						<outline text="buildFeedsMenu ();"/>
						<outline text="}" created="Thu, 17 Feb 2022 16:10:51 GMT"/>
						</outline>
					<outline text="}" created="Wed, 16 Feb 2022 16:42:45 GMT"/>
					</outline>
				<outline text="function startup () {">
					<outline text="console.log (&quot;startup&quot;);"/>
					<outline text="}"/>
					</outline>
				</outline>
			<outline text="index.html" created="Sat, 06 Nov 2021 16:50:39 GMT">
				<outline text="&lt;html&gt;">
					<outline text="&lt;head&gt;">
						<outline text="&lt;title&gt;Get Email address from Twitter account&lt;/title&gt;"/>
						<outline text="&lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=utf-8&quot;&gt;"/>
						<outline text="&lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;"/>
						<outline text=""/>
						<outline text="&lt;!-- Facebook metadata --&gt;" isComment="true">
							<outline text="&lt;meta property=&quot;og:url&quot; content=&quot;[%metaUrl%]&quot; /&gt;"/>
							<outline text="&lt;meta property=&quot;og:type&quot; content=&quot;website&quot; /&gt;"/>
							<outline text="&lt;meta property=&quot;og:title&quot; content=&quot;[%metaTitle%]&quot; /&gt;"/>
							<outline text="&lt;meta property=&quot;og:description&quot; content=&quot;[%metaDescription%]&quot; /&gt;"/>
							<outline text="&lt;meta property=&quot;og:image&quot; content=&quot;[%metaImgUrl%]&quot; /&gt;"/>
							<outline text="&lt;meta property=&quot;og:site_name&quot; content=&quot;[%metaSiteName%]&quot; /&gt;"/>
							</outline>
						<outline text="&lt;!-- Twitter metadata --&gt;" isComment="true">
							<outline text="&lt;meta name=&quot;twitter:card&quot; content=&quot;summary_large_image&quot;&gt;"/>
							<outline text="&lt;meta name=&quot;twitter:site&quot; content=&quot;@[%metaTwitterScreenName%]&quot;&gt;"/>
							<outline text="&lt;meta name=&quot;twitter:title&quot; content=&quot;[%metaTitle%]&quot;&gt;"/>
							<outline text="&lt;meta name=&quot;twitter:url&quot; content=&quot;[%metaUrl%]&quot;&gt;"/>
							<outline text="&lt;meta name=&quot;twitter:description&quot; content=&quot;[%metaDescription%]&quot;&gt;"/>
							<outline text="&lt;meta name=&quot;twitter:image:src&quot; content=&quot;[%metaImgUrl%]&quot;&gt;"/>
							</outline>
						<outline text=""/>
						<outline text="&lt;%basicIncludes2%&gt;"/>
						<outline text="" created="Tue, 15 Feb 2022 16:47:45 GMT"/>
						<outline text="&lt;script src=&quot;code.js&quot;&gt;&lt;/script&gt;"/>
						<outline text="&lt;link href=&quot;styles.css&quot; rel=&quot;stylesheet&quot; type=&quot;text/css&quot;&gt;"/>
						<outline text=""/>
						<outline text="&lt;script&gt;" isComment="true">
							<outline text="var appConsts = {">
								<outline text="productname: &quot;[%productName%]&quot;,"/>
								<outline text="productnameForDisplay: &quot;[%productNameForDisplay%]&quot;,"/>
								<outline text="version: &quot;[%version%]&quot;,"/>
								<outline text="urlTwitterServer: &quot;[%urlServerForClient%]&quot;,"/>
								<outline text="urlSocketServer: &quot;[%urlWebsocketServerForClient%]&quot;,"/>
								<outline text="flEnableLogin: [%flEnableLogin%],"/>
								<outline text="flUseSockets: true"/>
								<outline text="}"/>
								</outline>
							<outline text="&lt;/script&gt;"/>
							</outline>
						<outline text="" created="Thu, 17 Feb 2022 14:49:14 GMT"/>
						<outline text="&lt;/head&gt;"/>
						</outline>
					<outline text="&lt;body&gt;">
						<outline text="&lt;div class=&quot;divPageBody&quot;&gt;">
							<outline text="&lt;h3&gt;Let's get your email address&lt;/h3&gt;" created="Sat, 11 Feb 2023 15:21:20 GMT"/>
							<outline text="" created="Mon, 13 Feb 2023 16:23:32 GMT"/>
							<outline text="&lt;p&gt;This is for people who use Drummer. " created="Mon, 13 Feb 2023 16:36:42 GMT"/>
							<outline text="&lt;p&gt;The purpose of this app is to get your email address from your Twitter account. " created="Mon, 13 Feb 2023 16:23:32 GMT"/>
							<outline text="&lt;p&gt;Once we have this info, we can copy the outlines from your old Drummer account to the new one. " created="Mon, 13 Feb 2023 16:23:47 GMT"/>
							<outline text="" created="Mon, 13 Feb 2023 16:24:11 GMT"/>
							<outline text="&lt;h4&gt;How to:&lt;/h4&gt;&lt;ul&gt;" created="Mon, 13 Feb 2023 16:24:13 GMT">
								<outline text="&lt;li&gt;In Twitter create a new tweet containing only the text of your email address. " created="Mon, 13 Feb 2023 16:24:17 GMT"/>
								<outline text="&lt;li&gt;Copy the URL of the tweet to the clipboard." created="Mon, 13 Feb 2023 16:25:24 GMT"/>
								<outline text="&lt;li&gt;Come back to this page, and paste the URL of the tweet in the edit box below. Click Go." created="Mon, 13 Feb 2023 16:25:08 GMT"/>
								<outline text="&lt;li&gt;Our server will read the tweet, and if it correctly finds the email address, will record it in our database. " created="Mon, 13 Feb 2023 16:25:42 GMT"/>
								<outline text="&lt;li&gt;You can then delete the tweet. It isn't needed any longer. " created="Mon, 13 Feb 2023 16:26:30 GMT"/>
								<outline text="&lt;li&gt;If there's an error, it will tell you what the error is. ;-)" created="Mon, 13 Feb 2023 16:26:00 GMT"/>
								<outline text="&lt;/ul&gt;" created="Mon, 13 Feb 2023 16:32:55 GMT"/>
								</outline>
							<outline text="&lt;h4&gt;The URL of your tweet goes here:&lt;/h4&gt;" created="Mon, 13 Feb 2023 16:27:06 GMT">
								<outline text="&lt;input id=&quot;idUrlTweet&quot; class=&quot;xlarge&quot; value=&quot; &quot; placeholder=&quot;Enter the URL of the tweet here.&quot; type=&quot;text&quot; &gt;"/>
								<outline text="&lt;button id=&quot;idGoButton&quot; class=&quot;btn btnPost&quot; type=&quot;button&quot; onclick=&quot;clickGoButton ()&quot; &gt;&lt;i class=&quot;fa fa-check&quot;&gt;&lt;/i&gt; Go&lt;/button&gt;"/>
								</outline>
							<outline text="&lt;/div&gt;"/>
							</outline>
						<outline text="&lt;script&gt;">
							<outline text="$(document).ready (function () {">
								<outline text=""/>
								<outline text="startup ();" created="Wed, 30 Oct 2013 15:20:06 GMT" pgfnum="30656"/>
								<outline text="});"/>
								</outline>
							<outline text="&lt;/script&gt;"/>
							</outline>
						<outline text="&lt;/body&gt;"/>
						</outline>
					<outline text="&lt;/html&gt;"/>
					</outline>
				</outline>
			</outline>
		<outline text="build script" created="Mon, 13 Feb 2023 21:57:25 GMT">
			<outline text="nodeEditorSuite.utilities.buildReadTweet ()" created="Sat, 31 Dec 2022 16:13:36 GMT"/>
			</outline>
		</body>
	</opml>
